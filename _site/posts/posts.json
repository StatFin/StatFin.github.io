[
  {
    "path": "posts/2021-04-23-numpy-tutorial/",
    "title": "An Introduction to Python's NumPy Package",
    "description": "This tutorial is tailored for beginners who want to master the basics of NumPy package.",
    "author": [
      {
        "name": "Cephas Svosve",
        "url": "https://www.inet.ox.ac/people/cephas-svosve"
      }
    ],
    "date": "2021-03-21",
    "categories": [
      "NumPy",
      "Python"
    ],
    "contents": "\n\n\n\nLoading NumPy library\n\nimport numpy as np\n\nCreating NumPy arrays from python Lists\n\nl = [1,2,3,4,5]\n# Why do we have to put lists as numpy objects rather than use them as they are?\nnp.arr = np.array(l) \nnp.arr\narray([1, 2, 3, 4, 5])\n\n\ntype(np.arr)\n<class 'numpy.ndarray'>\n\n\nnp.mat('1 2; 3 4; 5 6')\nmatrix([[1, 2],\n        [3, 4],\n        [5, 6]])\n\n\n# from numpy matrix to numpy array\n\nnp.array(np.mat('1 2; 3 4; 5 6'))\narray([[1, 2],\n       [3, 4],\n       [5, 6]])\n\n\n#a = np.array(1,2,3,4,5,6) # wrong because the argument is not a list\na = np.array([1,2,3,4,5,6]) # correct\n\nType Casting\n\n# items in list are maintained in their original states\nl = [1,2,3.0] \nl\n[1, 2, 3.0]\n\n\n# items in the list all become floats\na = np.array([1,2,3.0])\na\narray([1., 2., 3.])\n\n\nprint(np.array([1,2,3], dtype = float))\n[1. 2. 3.]\n\n\nprint(np.array([1,2,3], dtype = 'U'))\n['1' '2' '3']\nprint(np.array([12345,2,3], dtype = '<U2'))\n['12' '2' '3']\nprint(np.array([1,2,3], dtype = complex))\n[1.+0.j 2.+0.j 3.+0.j]\n\n\nx = np.array([('Cephas',24, 1000.1), ('Temwanani', 25,4000.4)], dtype = [('name', '<U11'),('age','int'), ('salary', 'f4')])\n\n\nprint(x)\n[('Cephas', 24, 1000.1) ('Temwanani', 25, 4000.4)]\n\n\nprint('Row 1', x[0])\nRow 1 ('Cephas', 24, 1000.1)\nprint('Row 2', x[1])\nRow 2 ('Temwanani', 25, 4000.4)\n\n\nx = np.array([('Cephas',24, 1000.1), \n              ('Temwanani', 25,4000.4),\n             ('Caiphas',24, 1500.12), \n             ('Tinashe',22, 1150.80), ], dtype = [('name', '<U11'),('age','int'), ('salary', 'f4')])\n\nprint(x)\n[('Cephas', 24, 1000.1 ) ('Temwanani', 25, 4000.4 )\n ('Caiphas', 24, 1500.12) ('Tinashe', 22, 1150.8 )]\n\n\nfor i in range(4):\n    print('Row ', i, x[i])\nRow  0 ('Cephas', 24, 1000.1)\nRow  1 ('Temwanani', 25, 4000.4)\nRow  2 ('Caiphas', 24, 1500.12)\nRow  3 ('Tinashe', 22, 1150.8)\n\n\nx = np.array([('Cephas',24, 1000.1), \n              ('Temwanani', 25,4000.4),\n             ('Caiphas',24, 1500.12), \n             ('Tinashe',22, 1150.80), ], dtype = [('name', '<U2'),('age','U'), ('salary', 'f')])\n\n\nfor i in range(4):\n    print('Row ',i ,x[i])\nRow  0 ('Ce', '', 1000.1)\nRow  1 ('Te', '', 4000.4)\nRow  2 ('Ca', '', 1500.12)\nRow  3 ('Ti', '', 1150.8)\n\n\nx = np.array([('Cephas',24, 1000.1), \n              ('Temwanani', 25,4000.4),\n             ('Caiphas',24, 1500.12), \n             ('Tinashe',22, 1150.80), ], dtype = [('name', '<U2'),('age','int32'), ('salary', 'f')])\n\n\nfor i in range(4):\n    print('Row ',i ,x[i])\nRow  0 ('Ce', 24, 1000.1)\nRow  1 ('Te', 25, 4000.4)\nRow  2 ('Ca', 24, 1500.12)\nRow  3 ('Ti', 22, 1150.8)\n\nTwo Dimensional Array\n\n[(1,5,2,3),(4,5,6)]\n[(1, 5, 2, 3), (4, 5, 6)]\n\n\ntwo_arr = np.array([(1,2,3),(4,5,7),(0,2,8)])\ntwo_arr1= two_arr\ntwo_arr\narray([[1, 2, 3],\n       [4, 5, 7],\n       [0, 2, 8]])\n\n\nnp.mat(two_arr)\nmatrix([[1, 2, 3],\n        [4, 5, 7],\n        [0, 2, 8]])\n\n\nprint('Shape of 2-D Array is ', two_arr.shape)\nShape of 2-D Array is  (3, 3)\n\n\nprint('Number of Dimensions for 2-D Array is ', two_arr.ndim)\nNumber of Dimensions for 2-D Array is  2\n\n\nprint('The data type for the 2-D Array is ', two_arr.dtype)\nThe data type for the 2-D Array is  int64\n\n\nprint('The size of the 2-D Array is ', two_arr.size)\nThe size of the 2-D Array is  9\n\nThree Dimensional Array\n\nthree_arr = np.array([[[1,2,3],\n                       [3,4,2],\n                       [3,2,1]],\n                      \n                      [[2,1,3],\n                       [0,0,2], \n                       [3,4,5]],\n                     \n                     [[3,6,8],\n                      [4,0,1],\n                      [0,1,0]]])\n\n\nthree_arr\narray([[[1, 2, 3],\n        [3, 4, 2],\n        [3, 2, 1]],\n\n       [[2, 1, 3],\n        [0, 0, 2],\n        [3, 4, 5]],\n\n       [[3, 6, 8],\n        [4, 0, 1],\n        [0, 1, 0]]])\n\n\nprint(\"Shape of 3-D Array is \", three_arr.shape)\nShape of 3-D Array is  (3, 3, 3)\n\n\nprint('Size of 3-D Array is ', three_arr.size)\nSize of 3-D Array is  27\n\n\nprint('Number of Dimensions for 3-D Array is ', three_arr.ndim)\nNumber of Dimensions for 3-D Array is  3\n\n\nprint(\"Type of 3-D Array is \", three_arr.dtype)\nType of 3-D Array is  int64\n\nImportant Functions in NumPy\n\nnp.zeros((4,4))\narray([[0., 0., 0., 0.],\n       [0., 0., 0., 0.],\n       [0., 0., 0., 0.],\n       [0., 0., 0., 0.]])\n\n\nnp.mat(np.zeros((9,9)))\nmatrix([[0., 0., 0., 0., 0., 0., 0., 0., 0.],\n        [0., 0., 0., 0., 0., 0., 0., 0., 0.],\n        [0., 0., 0., 0., 0., 0., 0., 0., 0.],\n        [0., 0., 0., 0., 0., 0., 0., 0., 0.],\n        [0., 0., 0., 0., 0., 0., 0., 0., 0.],\n        [0., 0., 0., 0., 0., 0., 0., 0., 0.],\n        [0., 0., 0., 0., 0., 0., 0., 0., 0.],\n        [0., 0., 0., 0., 0., 0., 0., 0., 0.],\n        [0., 0., 0., 0., 0., 0., 0., 0., 0.]])\n\n\nnp.ones((3,5))\narray([[1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1.]])\n\n\nl = np.random.randn(9)\n\nprint(l.reshape((3,3)))\n[[-1.51311966  1.21782668 -0.17301972]\n [ 0.17106157 -0.14313437  0.40184316]\n [-0.25502833  0.05128411  0.67792246]]\nprint('-'*10)\n----------\nprint(np.empty((3,3)))\n[[1.51311966 1.21782668 0.17301972]\n [0.17106157 0.14313437 0.40184316]\n [0.25502833 0.05128411 0.67792246]]\n\n\nnp.eye(3)\narray([[1., 0., 0.],\n       [0., 1., 0.],\n       [0., 0., 1.]])\n\n\nA = np.eye(3)\nB = two_arr1\n\nprint(type(two_arr1))\n<class 'numpy.ndarray'>\nprint('\\n', A.dot(B))\n\n [[1. 2. 3.]\n [4. 5. 7.]\n [0. 2. 8.]]\nprint('\\n', A*B)\n\n [[1. 0. 0.]\n [0. 5. 0.]\n [0. 0. 8.]]\n\n\nprint(np.diag(B))\n[1 5 8]\n\nI hope you learnt a lot in this tutorial. This is only the beginning of NumPy. Look out for future advanced tutorials. Thanks!\n\n\n\n",
    "preview": "posts/2021-04-23-numpy-tutorial/distill-preview.png",
    "last_modified": "2021-04-23T12:23:10-04:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  }
]
